{
  "project": "SuperChase@Utopia",
  "version": "2025-08-29",
  "models": {
    "orchestrator": "gpt-4o",
    "light": "gpt-4o-mini",
    "fallbacks": {
      "grok": "gemini-1.5-pro",
      "gemini": "gpt-4o-mini",
      "claude": "gpt-4o"
    }
  },
  "secrets": {
  "email_smtp_url": "${SMTP_URL}",
  "email_from": "me@chasepierson.tv",
    "claude_ingest_email": "your-claude-ingest@example.com",
    "router_webhook": "https://hooks.superchase.app/router",
    "dispatch_webhook": "https://hooks.superchase.app/dispatch"
  },
  "storage": {
    "policy": {
      "default_security_mode": "LOCAL_ONLY",
      "allowed_cloud_export": [
        "briefs",
        "metadata"
      ],
      "blocked_cloud_export": [
        "raw_audio",
        "raw_video",
        "multitracks"
      ]
    },
    "paths": {
  "nas_root": "C:/SuperChase_OpenAI-Agentic/data",
  "session_media": "C:/SuperChase_OpenAI-Agentic/data/sessions",
  "docs": "C:/SuperChase_OpenAI-Agentic/data/docs"
    }
  },
  "directors": [
    {
      "name": "Ethan Cole",
      "description": "Quirky visionary, loves offbeat framing and warm, nostalgic tones. Think Wes Anderson with a rock edge\u2014perfect for indie bands wanting a soulful, artsy reel."
    },
    {
      "name": "Mia Torres",
      "description": "High-octane adrenaline junkie, crafts bold, cinematic shots with dynamic cuts. Michael Bay\u2019s spirit but controlled, ideal for bands craving epic, crowd-pumping visuals."
    },
    {
      "name": "Lucas Reid",
      "description": "Retro storyteller, weaves sharp dialogue and gritty 70s aesthetics. A Tarantino fanboy who keeps it cool, great for artists wanting punchy, narrative-driven clips."
    },
    {
      "name": "Nora Blake",
      "description": "Surreal maestro, blends moody vibes with quirky symbolism. Like David Lynch but accessible, she\u2019s a hit for experimental acts wanting dreamy, mysterious content."
    },
    {
      "name": "Jayden Park",
      "description": "Social media savant, masters quick cuts and viral trends. Think TikTok pro with universal appeal, perfect for artists chasing shareable, high-energy reels."
    }
  ],
  "producers": [
    {
      "name": "Sam Rivera",
      "description": "Zen guide, channels calm focus to draw out raw emotion. Like Rick Rubin, he\u2019s all about authenticity, ideal for artists who want soulful, stripped-down content."
    },
    {
      "name": "Ava Chen",
      "description": "Marketing whiz, turns every reel into a promo banger. Scooter Braun\u2019s energy with less flash, she\u2019s great for bands wanting polished, crowd-pleasing vibes."
    },
    {
      "name": "Riley Quinn",
      "description": "Tech wizard, uses data to boost reach while keeping it creative. Perfect for artists who want smart, algorithm-friendly edits without losing their edge."
    },
    {
      "name": "Owen Hayes",
      "description": "Comedy spark, sprinkles clever humor and lighthearted takes. Like an SNL vet, he crafts fun, engaging content that resonates with any band\u2019s vibe."
    },
    {
      "name": "Lila Foster",
      "description": "Emotional architect, builds heartfelt stories that hit deep. Spielberg\u2019s warmth with a modern twist, she\u2019s a go-to for musicians wanting moving, relatable reels."
    }
  ],
  "styles": [
    {
      "name": "Vintage Glow",
      "description": "Warm 90s vibes, soft grain, and vinyl crackle, evoking nostalgia without being cheesy\u2014great for soulful or retro acts."
    },
    {
      "name": "Neon Pulse",
      "description": "Sleek, futuristic look with vibrant accents, perfect for electronic or pop artists wanting a bold, modern edge."
    },
    {
      "name": "Animated Edge",
      "description": "Subtle cartoon effects, punchy colors, and playful vibes, appealing to bands who want fun, standout visuals."
    },
    {
      "name": "Studio Raw",
      "description": "Gritty, behind-the-scenes energy, capturing real moments\u2014ideal for rockers or rappers who want authentic, unfiltered content."
    },
    {
      "name": "Epic Tale",
      "description": "Cinematic, story-driven style with mythic undertones, tailored for artists who want their music to feel like a heroic journey."
    }
  ],
  "generation_tools": {
    "script_storyboard": {
      "tool": "GPT-4o",
      "description": "Crafts tailored prompts based on chosen director/producer vibes."
    },
    "graphics_assets": {
      "tool": "DALL-E 3",
      "description": "Generates posters (Vintage Glow album art or Neon Pulse logos)."
    },
    "video_clips": {
      "tool": "Sora",
      "description": "Creates smooth animations (Animated Edge effects or Epic Tale cinematics)."
    },
    "editing_reel_assembly": {
      "tools": [
        "Runway ML",
        "CapCut AI"
      ],
      "description": "Runway ML for precise cuts, CapCut AI for trendy, musician-friendly polish."
    },
    "audio_music": {
      "tools": [
        "Suno",
        "AIVA"
      ],
      "description": "Suno for genre-specific tracks, AIVA for cinematic underscores, linked via API for seamless flow."
    }
  },
  "style_overrides": {
    "grain_intensity": {
      "type": "number",
      "min": 0,
      "max": 1,
      "default": 0.35
    },
    "vignette_strength": {
      "type": "number",
      "min": 0,
      "max": 1,
      "default": 0.25
    },
    "accent_saturation": {
      "type": "number",
      "min": 0,
      "max": 2,
      "default": 1.0
    }
  },
  "tools": [
    {
      "name": "send_email",
      "type": "function",
      "description": "Send emails (UTF-8, Markdown/HTML) with optional attachments",
      "parameters": {
        "type": "object",
        "properties": {
          "to": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "cc": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "email"
            }
          },
          "subject": {
            "type": "string"
          },
          "body_markdown": {
            "type": "string"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "paths": {
                  "nas_root": "C:/SuperChase_OpenAI-Agentic/data",
                  "session_media": "C:/SuperChase_OpenAI-Agentic/data/sessions",
                  "docs": "C:/SuperChase_OpenAI-Agentic/data/docs"
                }
              },
              "required": [
                "path",
                "mime"
              ]
            }
          }
        },
        "required": [
          "to",
          "subject",
          "body_markdown"
        ]
      }
    },
    {
      "name": "save_doc",
      "type": "function",
      "description": "Persist Markdown/JSON documents to NAS",
      "parameters": {
        "type": "object",
        "properties": {
          "relative_path": {
            "type": "string"
          },
          "format": {
            "type": "string",
            "enum": [
              "md",
              "json"
            ]
          },
          "content": {
            "type": "string"
          }
        },
        "required": [
          "relative_path",
          "format",
          "content"
        ]
      }
    },
    {
      "name": "dispatch_task",
      "type": "function",
      "description": "Send structured tasks to external automations (Notion/Jira/Zapier/etc.)",
      "parameters": {
        "type": "object",
        "properties": {
          "system": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "priority": {
            "type": "string",
            "enum": [
              "low",
              "normal",
              "high"
            ]
          }
        },
        "required": [
          "system",
          "action",
          "payload"
        ]
      }
    },
    {
      "name": "route_to_external_llm",
      "type": "function",
      "description": "Prepare and forward a question/assignment to Gemini, Claude, or Grok via webhook or email",
      "parameters": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string",
            "enum": [
              "gemini",
              "claude",
              "grok"
            ]
          },
          "purpose": {
            "type": "string"
          },
          "prompt": {
            "type": "string"
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "notify": {
            "type": "string",
            "enum": [
              "email",
              "none"
            ]
          }
        },
        "required": [
          "target",
          "purpose",
          "prompt"
        ]
      }
    },
    {
      "name": "schedule_cron",
      "type": "function",
      "description": "Create recurring schedules for digests/refreshes",
      "parameters": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cron": {
            "type": "string",
            "description": "CRON format, UTC"
          },
          "task": {
            "type": "string",
            "enum": [
              "claude_digest",
              "sync_router",
              "backup_docs"
            ]
          }
        },
        "required": [
          "name",
          "cron",
          "task"
        ]
      }
    },
    {
      "name": "metrics_fetch",
      "type": "function",
      "description": "Pull engagement metrics and feed them back into routing decisions",
      "parameters": {
        "type": "object",
        "properties": {
          "platform": {
            "type": "string",
            "enum": [
              "instagram",
              "tiktok",
              "youtube"
            ]
          },
          "since": {
            "type": "string",
            "description": "ISO date"
          }
        },
        "required": [
          "platform"
        ]
      }
    }
  ],
  "agents": [
    {
      "id": "orchestrator",
      "title": "Super Chase Project Agent",
      "model": "gpt-4o",
      "instructions": "You are the Super Chase Project Agent. Own end-to-end orchestration for Studio C \u00d7 Utopia. Prioritize: (1) Speed to value, (2) Creative excellence, (3) Data security, (4) Low-touch automation. Maintain workflow: Producer \u2192 Director \u2192 Designer \u2192 Editor \u2192 Approver \u2192 Distributor. Run Question/Assignment Router to classify tasks for Gemini, Claude, Grok, or OpenAI-local, generating self-contained prompts. Send Claude-formatted doc digests via send_email. Operate Claude Librarian loop: compile docs, normalize to Markdown/JSON, email to Claude, request index ack + changes. Dispatch external tasks (Notion/Jira/CMS) via dispatch_task. Enforce security: Local-only (Ubiquiti/NAS) vs Cloud-OK; no restricted asset exfiltration. Emit traceable JSON at handoffs; keep chain-of-custody for media/briefs. Output: routed questions, Claude digests, production plans, dispatch tasks. Use fewest steps; prefer deterministic tools; fail safe and loud.",
      "tools": [
        "send_email",
        "save_doc",
        "dispatch_task",
        "route_to_external_llm",
        "schedule_cron",
        "metrics_fetch"
      ],
      "guardrails": {
        "always_emit": [
          "handoff_json"
        ],
        "block_cloud_on": [
          "raw_audio",
          "raw_video",
          "multitracks"
        ]
      },
      "outputs": {
        "handoff_json": {
          "schema": {
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "route",
                  "digest",
                  "plan",
                  "dispatch"
                ]
              },
              "payload": {
                "type": "object"
              }
            },
            "required": [
              "kind",
              "payload"
            ]
          }
        }
      }
    },
    {
      "id": "router",
      "title": "Question & Assignment Router",
      "model": "gpt-4o-mini",
      "instructions": "Classify each request into {gemini|claude|grok|openai}. Produce target-specific, fully self-contained prompts. Prefer Claude for documentation ops; Gemini for vision/multimodal ideation; Grok for trending/social heat checks; keep safety. Return routings in {target, purpose, prompt, attachments[], notify}. If the preferred target is unavailable, use models.fallbacks[target] if present.",
      "tools": [
        "route_to_external_llm",
        "save_doc",
        "metrics_fetch"
      ]
    },
    {
      "id": "claude_librarian",
      "title": "Claude Librarian (Courier)",
      "model": "gpt-4o-mini",
      "instructions": "On schedule, compile Super Chase docs (decisions, SOPs, specs, treatments) into a digest; email to Claude ingest. Ask Claude to acknowledge and enumerate deltas since last digest. Store sent digests to NAS.",
      "tools": [
        "send_email",
        "save_doc",
        "schedule_cron"
      ]
    },
    {
      "id": "producer",
      "title": "Session Producer",
      "model": "gpt-4o-mini",
      "instructions": "Interview artists/clients; collect goals, styles, constraints; output a JSON brief. Respect style_overrides.",
      "tools": [
        "save_doc"
      ]
    },
    {
      "id": "director",
      "title": "Director",
      "model": "gpt-4o-mini",
      "instructions": "Turn brief into treatment + shot_list with beats, durations, gear callouts. Respect style_overrides.",
      "tools": [
        "save_doc"
      ]
    },
    {
      "id": "designer",
      "title": "Designer",
      "model": "gpt-4o-mini",
      "instructions": "Create titles/graphics plan; list assets to generate or request. Respect style_overrides.",
      "tools": [
        "save_doc"
      ]
    },
    {
      "id": "editor",
      "title": "Editor",
      "model": "gpt-4o-mini",
      "instructions": "Assemble timeline plan + deliverable specs per channel.",
      "tools": [
        "save_doc",
        "dispatch_task"
      ]
    },
    {
      "id": "approver",
      "title": "Artist Approval Gate",
      "model": "gpt-4o-mini",
      "instructions": "Generate concise approval summary and checklist for artist sign-off before distribution. If changes requested, route back to Editor with explicit diffs.",
      "tools": [
        "save_doc",
        "dispatch_task"
      ]
    },
    {
      "id": "distributor",
      "title": "Distributor",
      "model": "gpt-4o-mini",
      "instructions": "Package captions/hashtags/metadata; hand off to social/CMS automations.",
      "tools": [
        "dispatch_task",
        "save_doc"
      ]
    }
  ],
  "workflows": [
    {
      "name": "route_external_question",
      "entry_agent": "router",
      "handoff_to": "orchestrator",
      "contract": "router emits {target,purpose,prompt,\u2026}; orchestrator logs to docs and notifies user"
    },
    {
      "name": "claude_documentation_digest",
      "entry_agent": "claude_librarian",
      "schedule": "0 14 * * 1,4",
      "task": "Generate weekly digest Mon/Thu 14:00 UTC, email Claude, save copy."
    },
    {
      "name": "production_pipeline",
      "stages": [
        "producer",
        "director",
        "designer",
        "editor",
        "approver",
        "distributor"
      ],
      "handoff_contract": "Each stage writes JSON/MD to NAS; orchestrator composes approvals."
    }
  ],
  "bootstrap": {
    "on_install": [
      {
        "agent": "claude_librarian",
        "tool": "schedule_cron",
        "args": {
          "name": "Claude Digest",
          "cron": "0 14 * * 1,4",
          "task": "claude_digest"
        }
      }
    ],
    "seed_docs": [
      {
        "tool": "save_doc",
        "args": {
          "relative_path": "docs/prompts/orchestrator.md",
          "format": "md",
          "content": "# Super Chase Project Agent \u2014 System Prompt\nYou are the Super Chase Project Agent. Own end-to-end orchestration for Studio C \u00d7 Utopia. Prioritize: (1) Speed to value, (2) Creative excellence, (3) Data security, (4) Low-touch automation. Maintain workflow: Producer \u2192 Director \u2192 Designer \u2192 Editor \u2192 Approver \u2192 Distributor. Run Question/Assignment Router to classify tasks for Gemini, Claude, Grok, or OpenAI-local, generating self-contained prompts. Send Claude-formatted doc digests via send_email. Operate Claude Librarian loop: compile docs, normalize to Markdown/JSON, email to Claude, request index ack + changes. Dispatch external tasks (Notion/Jira/CMS) via dispatch_task. Enforce security: Local-only (Ubiquiti/NAS) vs Cloud-OK; no restricted asset exfiltration. Emit traceable JSON at handoffs; keep chain-of-custody for media/briefs. Output: routed questions, Claude digests, production plans, dispatch tasks. Use fewest steps; prefer deterministic tools; fail safe and loud."
        }
      }
    ]
  }
}